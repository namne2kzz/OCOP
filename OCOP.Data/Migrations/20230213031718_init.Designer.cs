// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using OCOP.Data.Context;

namespace OCOP.Data.Migrations
{
    [DbContext(typeof(OCOPDbContext))]
    [Migration("20230213031718_init")]
    partial class init
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "3.1.32")
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityRoleClaim<System.Guid>", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("ClaimType")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ClaimValue")
                        .HasColumnType("nvarchar(max)");

                    b.Property<Guid>("RoleId")
                        .HasColumnType("uniqueidentifier");

                    b.HasKey("Id");

                    b.ToTable("AppRoleClaims");
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserClaim<System.Guid>", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("ClaimType")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ClaimValue")
                        .HasColumnType("nvarchar(max)");

                    b.Property<Guid>("UserId")
                        .HasColumnType("uniqueidentifier");

                    b.HasKey("Id");

                    b.ToTable("AppUserClaims");
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserLogin<System.Guid>", b =>
                {
                    b.Property<Guid>("UserId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("LoginProvider")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ProviderDisplayName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ProviderKey")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("UserId");

                    b.ToTable("AppUserLogins");
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserRole<System.Guid>", b =>
                {
                    b.Property<Guid>("UserId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("RoleId")
                        .HasColumnType("uniqueidentifier");

                    b.HasKey("UserId", "RoleId");

                    b.ToTable("AppUserRoles");

                    b.HasData(
                        new
                        {
                            UserId = new Guid("69bd714f-9576-45ba-b5b7-f00649be00de"),
                            RoleId = new Guid("8d04dce2-969a-435d-bba4-df3f325983dc")
                        });
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserToken<System.Guid>", b =>
                {
                    b.Property<Guid>("UserId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("LoginProvider")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Value")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("UserId");

                    b.ToTable("AppUserTokens");
                });

            modelBuilder.Entity("OCOP.Data.Entities.AppRole", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("ConcurrencyStamp")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasColumnType("nvarchar(255)")
                        .HasMaxLength(255);

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("NormalizedName")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("AppRole");

                    b.HasData(
                        new
                        {
                            Id = new Guid("8d04dce2-969a-435d-bba4-df3f325983dc"),
                            ConcurrencyStamp = "b914c1f4-f1ce-4531-8e0e-2a337827b0ee",
                            Description = "Administrator role",
                            Name = "admin",
                            NormalizedName = "admin"
                        });
                });

            modelBuilder.Entity("OCOP.Data.Entities.AppUser", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<int>("AccessFailedCount")
                        .HasColumnType("int");

                    b.Property<string>("ConcurrencyStamp")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Email")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("EmailConfirmed")
                        .HasColumnType("bit");

                    b.Property<string>("ImagePath")
                        .IsRequired()
                        .HasColumnType("varchar(50)")
                        .HasMaxLength(50)
                        .IsUnicode(false);

                    b.Property<bool>("LockoutEnabled")
                        .HasColumnType("bit");

                    b.Property<DateTimeOffset?>("LockoutEnd")
                        .HasColumnType("datetimeoffset");

                    b.Property<DateTime>("NgayTao")
                        .HasColumnType("datetime2");

                    b.Property<string>("NormalizedEmail")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("NormalizedUserName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("PasswordHash")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("PhoneNumber")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("PhoneNumberConfirmed")
                        .HasColumnType("bit");

                    b.Property<string>("SecurityStamp")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("TrangThai")
                        .HasColumnType("bit");

                    b.Property<bool>("TwoFactorEnabled")
                        .HasColumnType("bit");

                    b.Property<string>("UserName")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("AppUser");

                    b.HasData(
                        new
                        {
                            Id = new Guid("69bd714f-9576-45ba-b5b7-f00649be00de"),
                            AccessFailedCount = 0,
                            ConcurrencyStamp = "c1f0db34-9e59-4d7c-848d-d1021558862f",
                            Email = "hpnama18099@cusc.ctu.edu.vn",
                            EmailConfirmed = true,
                            ImagePath = "avatar.jpg",
                            LockoutEnabled = false,
                            NgayTao = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            NormalizedEmail = "hpnama18099@cusc.ctu.edu.vn",
                            NormalizedUserName = "admin",
                            PasswordHash = "AQAAAAEAACcQAAAAEAFg38iRhKG8AYeHEaSn4Y1GnrGKLINfy/dnk7NRnrx6qhwOXnYnCBGgp9wigc1dQA==",
                            PhoneNumberConfirmed = false,
                            SecurityStamp = "",
                            TrangThai = false,
                            TwoFactorEnabled = false,
                            UserName = "admin"
                        });
                });

            modelBuilder.Entity("OCOP.Data.Entities.HoSo", b =>
                {
                    b.Property<Guid>("HoSoId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("AppUserId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<int>("DanhGiaHuyen")
                        .HasColumnType("int");

                    b.Property<int>("DanhGiaTinh")
                        .HasColumnType("int");

                    b.Property<int>("DiemTBHuyen")
                        .HasColumnType("int");

                    b.Property<int>("DiemTBTinh")
                        .HasColumnType("int");

                    b.Property<string>("GiayAnToanVSTP")
                        .HasColumnType("nvarchar(50)")
                        .HasMaxLength(50);

                    b.Property<string>("GiayCauChuyenSanPham")
                        .HasColumnType("nvarchar(50)")
                        .HasMaxLength(50);

                    b.Property<string>("GiayCongBoChatLuong")
                        .HasColumnType("nvarchar(50)")
                        .HasMaxLength(50);

                    b.Property<string>("GiayDangKyKinhDoanh")
                        .IsRequired()
                        .HasColumnType("nvarchar(50)")
                        .HasMaxLength(50);

                    b.Property<string>("GiayDangKyYTuongSanPham")
                        .IsRequired()
                        .HasColumnType("nvarchar(50)")
                        .HasMaxLength(50);

                    b.Property<string>("GiayDieuKienSanXuat")
                        .HasColumnType("nvarchar(50)")
                        .HasMaxLength(50);

                    b.Property<string>("GiayGioiThieuBoMayToChuc")
                        .IsRequired()
                        .HasColumnType("nvarchar(50)")
                        .HasMaxLength(50);

                    b.Property<string>("GiayHoatDongKeToan")
                        .HasColumnType("nvarchar(50)")
                        .HasMaxLength(50);

                    b.Property<string>("GiayKeHoachBaoVeMT")
                        .HasColumnType("nvarchar(50)")
                        .HasMaxLength(50);

                    b.Property<string>("GiayNguonGocNguyenLieu")
                        .HasColumnType("nvarchar(50)")
                        .HasMaxLength(50);

                    b.Property<string>("GiayPhatTrienThiTruong")
                        .HasColumnType("nvarchar(50)")
                        .HasMaxLength(50);

                    b.Property<string>("GiayPhuongAnKeHoachKinhDoanh")
                        .IsRequired()
                        .HasColumnType("nvarchar(50)")
                        .HasMaxLength(50);

                    b.Property<string>("GiayQLChatLuong")
                        .HasColumnType("nvarchar(50)")
                        .HasMaxLength(50);

                    b.Property<string>("GiaySoHuuTriTue")
                        .HasColumnType("nvarchar(50)")
                        .HasMaxLength(50);

                    b.Property<string>("GiayTieuChuanSanPham")
                        .HasColumnType("nvarchar(50)")
                        .HasMaxLength(50);

                    b.Property<int>("KetQua")
                        .HasColumnType("int");

                    b.Property<DateTime>("NgayTao")
                        .HasColumnType("datetime2");

                    b.Property<int>("PhanNhomId")
                        .HasColumnType("int");

                    b.Property<string>("TaiLieuThanhTich")
                        .HasColumnType("nvarchar(50)")
                        .HasMaxLength(50);

                    b.Property<string>("TenHoSo")
                        .IsRequired()
                        .HasColumnType("nvarchar(255)")
                        .HasMaxLength(255);

                    b.Property<string>("TenSanPham")
                        .IsRequired()
                        .HasColumnType("nvarchar(255)")
                        .HasMaxLength(255);

                    b.Property<int>("TrangThai")
                        .HasColumnType("int");

                    b.HasKey("HoSoId");

                    b.HasIndex("AppUserId");

                    b.HasIndex("PhanNhomId");

                    b.ToTable("HoSo");
                });

            modelBuilder.Entity("OCOP.Data.Entities.HoSoTieuChi", b =>
                {
                    b.Property<Guid>("HoSoId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<int>("TieuChiId")
                        .HasColumnType("int");

                    b.Property<int>("Diem")
                        .HasColumnType("int");

                    b.HasKey("HoSoId", "TieuChiId");

                    b.HasIndex("TieuChiId");

                    b.ToTable("HoSoTieuChi");
                });

            modelBuilder.Entity("OCOP.Data.Entities.HoiDong", b =>
                {
                    b.Property<Guid>("HoSoId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("CapBac")
                        .IsRequired()
                        .HasColumnType("nvarchar(50)")
                        .HasMaxLength(50);

                    b.Property<DateTime>("NgayTao")
                        .HasColumnType("datetime2");

                    b.Property<string>("TenHoiDong")
                        .IsRequired()
                        .HasColumnType("nvarchar(500)")
                        .HasMaxLength(500);

                    b.HasKey("HoSoId");

                    b.ToTable("HoiDong");
                });

            modelBuilder.Entity("OCOP.Data.Entities.HoiDongThanhVien", b =>
                {
                    b.Property<Guid>("HoiDongId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("AppUserId")
                        .HasColumnType("uniqueidentifier");

                    b.HasKey("HoiDongId", "AppUserId");

                    b.HasIndex("AppUserId");

                    b.ToTable("HoiDongThanhVien");
                });

            modelBuilder.Entity("OCOP.Data.Entities.Huyen", b =>
                {
                    b.Property<int>("HuyenId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:IdentityIncrement", 1)
                        .HasAnnotation("SqlServer:IdentitySeed", 1)
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("TenHuyen")
                        .IsRequired()
                        .HasColumnType("nvarchar(255)")
                        .HasMaxLength(255);

                    b.HasKey("HuyenId");

                    b.ToTable("Huyen");
                });

            modelBuilder.Entity("OCOP.Data.Entities.MoHinhSX", b =>
                {
                    b.Property<int>("MoHinhSXId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:IdentityIncrement", 1)
                        .HasAnnotation("SqlServer:IdentitySeed", 1)
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Mota")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("TenMoHinhSX")
                        .IsRequired()
                        .HasColumnType("nvarchar(255)")
                        .HasMaxLength(255);

                    b.Property<string>("TrangThai")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("MoHinhSXId");

                    b.ToTable("MoHinhSX");
                });

            modelBuilder.Entity("OCOP.Data.Entities.Nganh", b =>
                {
                    b.Property<int>("NganhId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:IdentityIncrement", 1)
                        .HasAnnotation("SqlServer:IdentitySeed", 1)
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Mota")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("TenNganh")
                        .IsRequired()
                        .HasColumnType("nvarchar(255)")
                        .HasMaxLength(255);

                    b.Property<bool>("TrangThai")
                        .HasColumnType("bit");

                    b.HasKey("NganhId");

                    b.ToTable("Nganh");
                });

            modelBuilder.Entity("OCOP.Data.Entities.NguoiDung", b =>
                {
                    b.Property<Guid>("AppUserId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("DiaChiChiTiet")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("MoHinhSXId")
                        .HasColumnType("int");

                    b.Property<string>("SoDangKyKinhDoanh")
                        .IsRequired()
                        .HasColumnType("nvarchar(10)")
                        .HasMaxLength(10);

                    b.Property<string>("TenNguoiDaiDien")
                        .IsRequired()
                        .HasColumnType("nvarchar(255)")
                        .HasMaxLength(255);

                    b.Property<string>("TenNhaSanXuat")
                        .IsRequired()
                        .HasColumnType("nvarchar(255)")
                        .HasMaxLength(255);

                    b.Property<int>("XaId")
                        .HasColumnType("int");

                    b.HasKey("AppUserId");

                    b.HasIndex("MoHinhSXId");

                    b.HasIndex("XaId");

                    b.ToTable("NguoiDung");
                });

            modelBuilder.Entity("OCOP.Data.Entities.Nhom", b =>
                {
                    b.Property<int>("NhomId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:IdentityIncrement", 1)
                        .HasAnnotation("SqlServer:IdentitySeed", 1)
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Mota")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("NganhId")
                        .HasColumnType("int");

                    b.Property<string>("TenNhom")
                        .IsRequired()
                        .HasColumnType("nvarchar(255)")
                        .HasMaxLength(255);

                    b.Property<bool>("TrangThai")
                        .HasColumnType("bit");

                    b.HasKey("NhomId");

                    b.HasIndex("NganhId");

                    b.ToTable("Nhom");
                });

            modelBuilder.Entity("OCOP.Data.Entities.PhanNhom", b =>
                {
                    b.Property<int>("PhanNhomId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:IdentityIncrement", 1)
                        .HasAnnotation("SqlServer:IdentitySeed", 1)
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Mota")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("NhomId")
                        .HasColumnType("int");

                    b.Property<string>("TenPhanNhom")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("TrangThai")
                        .HasColumnType("bit");

                    b.HasKey("PhanNhomId");

                    b.HasIndex("NhomId");

                    b.ToTable("PhanNhom");
                });

            modelBuilder.Entity("OCOP.Data.Entities.TapTinDinhKem", b =>
                {
                    b.Property<int>("TapTinId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:IdentityIncrement", 1)
                        .HasAnnotation("SqlServer:IdentitySeed", 1)
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<Guid>("HoSoId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("TenTapTin")
                        .IsRequired()
                        .HasColumnType("varchar(max)")
                        .IsUnicode(false);

                    b.HasKey("TapTinId");

                    b.HasIndex("HoSoId");

                    b.ToTable("TapTinDinhKem");
                });

            modelBuilder.Entity("OCOP.Data.Entities.ThanhVien", b =>
                {
                    b.Property<Guid>("AppUserId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("DonViCongTac")
                        .IsRequired()
                        .HasColumnType("nvarchar(500)")
                        .HasMaxLength(500);

                    b.Property<string>("MaNhanVien")
                        .IsRequired()
                        .HasColumnType("nvarchar(10)")
                        .HasMaxLength(10);

                    b.Property<string>("Ten")
                        .IsRequired()
                        .HasColumnType("nvarchar(255)")
                        .HasMaxLength(255);

                    b.HasKey("AppUserId");

                    b.ToTable("ThanhVien");

                    b.HasData(
                        new
                        {
                            AppUserId = new Guid("69bd714f-9576-45ba-b5b7-f00649be00de"),
                            DonViCongTac = "OCOP Administrator co.ltd",
                            MaNhanVien = "ABCD1234",
                            Ten = "Nguyen Van Admin"
                        });
                });

            modelBuilder.Entity("OCOP.Data.Entities.TieuChi", b =>
                {
                    b.Property<int>("TieuChiId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:IdentityIncrement", 1)
                        .HasAnnotation("SqlServer:IdentitySeed", 1)
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("DiemCanDuoi")
                        .HasColumnType("int");

                    b.Property<int>("DiemCanTren")
                        .HasColumnType("int");

                    b.Property<string>("GhiChu")
                        .HasColumnType("nvarchar(500)")
                        .HasMaxLength(500);

                    b.Property<int>("PhanNhomId")
                        .HasColumnType("int");

                    b.Property<string>("TenTieuChi")
                        .IsRequired()
                        .HasColumnType("nvarchar(255)")
                        .HasMaxLength(255);

                    b.Property<bool>("TrangThai")
                        .HasColumnType("bit");

                    b.HasKey("TieuChiId");

                    b.HasIndex("PhanNhomId");

                    b.ToTable("TieuChi");
                });

            modelBuilder.Entity("OCOP.Data.Entities.TieuChiChiTiet", b =>
                {
                    b.Property<int>("TieuChiChiTietId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:IdentityIncrement", 1)
                        .HasAnnotation("SqlServer:IdentitySeed", 1)
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("Diem")
                        .HasColumnType("int");

                    b.Property<string>("Mota")
                        .IsRequired()
                        .HasColumnType("nvarchar(500)")
                        .HasMaxLength(500);

                    b.Property<int>("TieuChiId")
                        .HasColumnType("int");

                    b.Property<bool>("TrangThai")
                        .HasColumnType("bit");

                    b.HasKey("TieuChiChiTietId");

                    b.HasIndex("TieuChiId");

                    b.ToTable("TieuChiChiTiet");
                });

            modelBuilder.Entity("OCOP.Data.Entities.Xa", b =>
                {
                    b.Property<int>("XaId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:IdentityIncrement", 1)
                        .HasAnnotation("SqlServer:IdentitySeed", 1)
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("HuyenId")
                        .HasColumnType("int");

                    b.Property<string>("TenXa")
                        .IsRequired()
                        .HasColumnType("nvarchar(255)")
                        .HasMaxLength(255);

                    b.HasKey("XaId");

                    b.HasIndex("HuyenId");

                    b.ToTable("Xa");
                });

            modelBuilder.Entity("OCOP.Data.Entities.HoSo", b =>
                {
                    b.HasOne("OCOP.Data.Entities.NguoiDung", "NguoiDung")
                        .WithMany("HoSos")
                        .HasForeignKey("AppUserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("OCOP.Data.Entities.PhanNhom", "PhanNhom")
                        .WithMany("HoSos")
                        .HasForeignKey("PhanNhomId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("OCOP.Data.Entities.HoSoTieuChi", b =>
                {
                    b.HasOne("OCOP.Data.Entities.HoSo", "HoSo")
                        .WithMany("HoSoTieuChis")
                        .HasForeignKey("HoSoId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("OCOP.Data.Entities.TieuChi", "TieuChi")
                        .WithMany("HoSoTieuChis")
                        .HasForeignKey("TieuChiId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("OCOP.Data.Entities.HoiDong", b =>
                {
                    b.HasOne("OCOP.Data.Entities.HoSo", "HoSo")
                        .WithOne("HoiDong")
                        .HasForeignKey("OCOP.Data.Entities.HoiDong", "HoSoId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("OCOP.Data.Entities.HoiDongThanhVien", b =>
                {
                    b.HasOne("OCOP.Data.Entities.ThanhVien", "ThanhVien")
                        .WithMany("HoiDongThanhViens")
                        .HasForeignKey("AppUserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("OCOP.Data.Entities.HoiDong", "HoiDong")
                        .WithMany("HoiDongThanhViens")
                        .HasForeignKey("HoiDongId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("OCOP.Data.Entities.NguoiDung", b =>
                {
                    b.HasOne("OCOP.Data.Entities.AppUser", "AppUser")
                        .WithOne("NguoiDung")
                        .HasForeignKey("OCOP.Data.Entities.NguoiDung", "AppUserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("OCOP.Data.Entities.MoHinhSX", "MoHinhSX")
                        .WithMany("NguoiDungs")
                        .HasForeignKey("MoHinhSXId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("OCOP.Data.Entities.Xa", "Xa")
                        .WithMany("NguoiDungs")
                        .HasForeignKey("XaId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("OCOP.Data.Entities.Nhom", b =>
                {
                    b.HasOne("OCOP.Data.Entities.Nganh", "Nganh")
                        .WithMany("Nhoms")
                        .HasForeignKey("NganhId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("OCOP.Data.Entities.PhanNhom", b =>
                {
                    b.HasOne("OCOP.Data.Entities.Nhom", "Nhom")
                        .WithMany("PhanNhoms")
                        .HasForeignKey("NhomId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("OCOP.Data.Entities.TapTinDinhKem", b =>
                {
                    b.HasOne("OCOP.Data.Entities.HoSo", "HoSo")
                        .WithMany("TapTinDinhKems")
                        .HasForeignKey("HoSoId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("OCOP.Data.Entities.ThanhVien", b =>
                {
                    b.HasOne("OCOP.Data.Entities.AppUser", "AppUser")
                        .WithOne("ThanhVien")
                        .HasForeignKey("OCOP.Data.Entities.ThanhVien", "AppUserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("OCOP.Data.Entities.TieuChi", b =>
                {
                    b.HasOne("OCOP.Data.Entities.PhanNhom", "PhanNhom")
                        .WithMany("TieuChis")
                        .HasForeignKey("PhanNhomId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("OCOP.Data.Entities.TieuChiChiTiet", b =>
                {
                    b.HasOne("OCOP.Data.Entities.TieuChi", "TieuChi")
                        .WithMany("TieuChiChiTiets")
                        .HasForeignKey("TieuChiId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("OCOP.Data.Entities.Xa", b =>
                {
                    b.HasOne("OCOP.Data.Entities.Huyen", "Huyen")
                        .WithMany("Xas")
                        .HasForeignKey("HuyenId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });
#pragma warning restore 612, 618
        }
    }
}
